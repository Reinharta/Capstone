@model Capstone.ViewModels.OrganizationProfileViewModel

@{
    ViewBag.Title = "OrganizationProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<h2>@Model.Organization.OrganizationName</h2>

<div>
    <h5>Profile</h5>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>

        <dd>
            @*@Html.DisplayFor(model => model.Phone)*@
            @String.Format("({0}) {1}-{2}"
            , Model.Phone.Substring(0, 3)
            , Model.Phone.Substring(3, 3)
            , Model.Phone.Substring(6, Model.Phone.Length - 6))
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Website)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Website)
        </dd>

        <dt>
            Shipping Address
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShippingAddress.ContactPerson)<br />
            @Html.DisplayFor(model => model.ShippingAddress.StreetAddress)<br />
            @Html.DisplayFor(model => model.ShippingAddress.City), @Html.DisplayFor(model => model.ShippingAddress.State) @Html.DisplayFor(model => model.ShippingAddress.Zipcode)
        </dd>

        <dt>
            Drop-Off Address
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DropOffAddress.ContactPerson)<br />
            @Html.DisplayFor(model => model.DropOffAddress.StreetAddress)<br />
            @Html.DisplayFor(model => model.DropOffAddress.City), @Html.DisplayFor(model => model.DropOffAddress.State) @Html.DisplayFor(model => model.DropOffAddress.Zipcode)
        </dd>

    </dl>

    <head>

       


        <style>
            /* Set the size of the div element that contains the map */
            #map {
                height: 400px; /* The height is 400 pixels */
                width: 100%; /* The width is the width of the web page */
            }
        </style>
    </head>
    <body>
        <h3>Drop-Off Location</h3>
        <!--The div element for the map -->
        <div id="map"></div>
        <script>
            // Initialize and add the map
            function initMap() {
                // The location of Uluru
                var uluru = { lat: @Model.DropOffAddress.Latitude, lng: @Model.DropOffAddress.Longitude };
                // The map, centered at Uluru
                var map = new google.maps.Map(
                    document.getElementById('map'), { zoom: 15, center: uluru });
                // The marker, positioned at Uluru
                var marker = new google.maps.Marker({ position: uluru, map: map });
            }
        </script>

        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=&callback=initMap"
                async defer></script>


</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.OrganizationId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
</body>
</html>
